2.1 Назва роботи:
Лабораторна робота №14: Основні операції з логічними значеннями в Python

2.2 Мета роботи:
Основна мета лабораторної роботи полягає у вдосконаленні розуміння основних операцій з логічними значеннями в мові програмування Python та навичок їх використання для різних ситуацій.

2.3 Опис завдання:
У цій лабораторній роботі вам потрібно реалізувати наступні функції з обробки логічних значень в Python:

Основні операції з логічними значеннями: Функція check_truth(a, b, c) повертає результат виразу (a and b) or c.

Логічна еквівалентність: Функція logical_equivalence(a, b) повертає True, якщо a дорівнює b.

Виключне або (XOR): Функція xor(a, b) повертає True, якщо лише один з аргументів a або b є True.

Умовне вітання: Функція greet(condition) повертає "Hello, World!" якщо condition є True, інакше повертає "Goodbye, World!".

Вкладені умови: Функція nested_condition(x, y, z) повертає:

"All same", якщо всі три числа x, y, z рівні.
"All different", якщо всі три числа різні.
"Neither" в інших випадках.
Лічильник True: Функція count_true(bool_list) повертає кількість значень True у списку bool_list.

Парність бінарного представлення: Функція parity(n) повертає True, якщо кількість одиниць у бінарному представленні числа n парна.

Голосування більшості: Функція majority_vote(a, b, c) повертає True, якщо більше половини аргументів a, b, c є True.

Перемикач логічного значення: Функція switch(value) повертає протилежне значення до value.

Імітація тернарного оператора: Функція ternary_check(condition, true_value, false_value) повертає true_value, якщо condition є True, інакше повертає false_value.

Перевірка комбінації: Функція validate(x, y, z) повертає True, якщо x є True або обидва y і z є True.

Ланцюжок умов: Функція chain_check(a, b, c) повертає:

"Increasing", якщо числа a, b, c знаходяться у строго зростаючому порядку.
"Decreasing", якщо числа у строго спадному порядку.
"Neither" в інших випадках.
Фільтрація True значень: Функція filter_true(bool_list) повертає новий список із значень True зі списку bool_list.

Умовний мультиплексор: Функція multiplexer(a, b, c, n) використовує вкладені умови для повернення різних значень n залежно від умов a, b, c.

2.4 Виконання роботи:
Для виконання цієї лабораторної роботи створіть новий репозиторій на GitHub з назвою lab14. Всі функції реалізуйте у файлі main.py. Додайте файл README.md, де коротко поясніть кожну функцію, її призначення, вхідні параметри та приклади використання. Приклади використання кожної функції виведіть на консоль у форматі, аналогічному до тих, що надані вами в запитанні.

2.5 Результати:
Кожна функція була протестована з різними вхідними значеннями, і вони повертали очікувані результати.

2.6 Висновки:
У ході виконання лабораторної роботи були успішно реалізовані всі задачі. Вони дозволили покращити розуміння логічних операцій в Python та вміння їх застосовувати для різних задач.
